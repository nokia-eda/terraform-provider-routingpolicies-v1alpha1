{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.ASPathSet": {
        "description": "ASPathSet is the Schema for the aspathsets API",
        "properties": {
          "apiVersion": {
            "default": "routingpolicies.eda.nokia.com/v1alpha1",
            "pattern": "^routingpolicies\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to routingpolicies.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ASPathSet",
            "pattern": "^ASPathSet$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ASPathSet",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet_metadata"
          },
          "spec": {
            "description": "ASPathSetSpec defines the desired state of ASPathSet",
            "properties": {
              "members": {
                "description": "Members is a list of AS path regular expressions.",
                "items": {
                  "type": "string"
                },
                "title": "AS Path Members",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-may-reorder": true,
                  "ui-order-priority": 200
                }
              },
              "regexMode": {
                "description": "Defines how AS_PATH attribute is converted into a string for regex matching.",
                "enum": [
                  "ASN",
                  "Character"
                ],
                "title": "Regex Mode",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 500
                }
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ASPathSetStatus defines the observed state of ASPathSet",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.ASPathSetList": {
        "description": "ASPathSetList is a list of aspathsets",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.ASPathSet_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.ASPathSet_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.ASPathSet_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "routingpolicies.eda.nokia.com",
                  "kind": "ASPathSet",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.routingpolicies.v1alpha1.CommunitySet": {
        "description": "CommunitySet is the Schema for the communitysets API",
        "properties": {
          "apiVersion": {
            "default": "routingpolicies.eda.nokia.com/v1alpha1",
            "pattern": "^routingpolicies\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to routingpolicies.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "CommunitySet",
            "pattern": "^CommunitySet$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to CommunitySet",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet_metadata"
          },
          "spec": {
            "description": "CommunitySetSpec defines the desired state of CommunitySet",
            "properties": {
              "expressionMatch": {
                "description": "Options that determine the matching criteria that applies to the list of community members.",
                "title": "Expression Match",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 2500,
                  "ui-single-line-group": "Community Set"
                }
              },
              "matchSetOptions": {
                "description": "The matching criteria that applies to the Members list.",
                "enum": [
                  "All",
                  "Any",
                  "Invert"
                ],
                "title": "Match Set Options",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 1500
                }
              },
              "members": {
                "description": "A standard BGP community value, regular expression or well-known name or else a large BGP community value or regular expression.",
                "items": {
                  "type": "string"
                },
                "title": "Community Set Members",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 500,
                  "ui-single-line-group": "Community Set"
                }
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "CommunitySetStatus defines the observed state of CommunitySet",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.CommunitySetList": {
        "description": "CommunitySetList is a list of communitysets",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.CommunitySet_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.CommunitySet_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.CommunitySet_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "routingpolicies.eda.nokia.com",
                  "kind": "CommunitySet",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.routingpolicies.v1alpha1.Policy": {
        "description": "Policy is the Schema for the policys API",
        "properties": {
          "apiVersion": {
            "default": "routingpolicies.eda.nokia.com/v1alpha1",
            "pattern": "^routingpolicies\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to routingpolicies.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Policy",
            "pattern": "^Policy$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Policy",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy_metadata"
          },
          "spec": {
            "description": "Policy defines a set of rules and actions to manage network traffic or routing behavior, with statements that include matching conditions and actions, such as accepting or rejecting routes, or modifying route attributes like BGP parameters.",
            "properties": {
              "defaultAction": {
                "description": "The default action to apply if no other actions are defined.",
                "properties": {
                  "bgp": {
                    "description": "Actions related to the BGP protocol.",
                    "properties": {
                      "asPathPrepend": {
                        "description": "AS number to prepend to the AS Path attributes.",
                        "format": "int32",
                        "maximum": 4294967295,
                        "minimum": 1,
                        "title": "AS Path Prepend",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "ASPrependReplace"
                        }
                      },
                      "asPathRemove": {
                        "description": "Clear the AS path to make it empty.",
                        "title": "AS Path Remove",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2
                        }
                      },
                      "asPathReplace": {
                        "description": "Replace the existing AS path with a new AS_SEQUENCE containing the listed AS numbers.",
                        "items": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "title": "AS Path Replace",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "ASPrependReplace"
                        }
                      },
                      "communitySet": {
                        "description": "Modify BGP communities associated with the route using hybrid Community Sets.",
                        "properties": {
                          "add": {
                            "description": "List of community sets to add to the route.",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 1,
                            "title": "Add Communities",
                            "type": "array",
                            "x-eda-nokia-com": {
                              "ui-auto-completes": [
                                {
                                  "condition": "true",
                                  "group": "routingpolicies.eda.nokia.com",
                                  "resource": "communitysets",
                                  "type": "gvr",
                                  "version": "v1alpha1"
                                }
                              ],
                              "ui-column-span": 3
                            }
                          },
                          "remove": {
                            "description": "List of community sets to remove from the route.",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 1,
                            "title": "Remove Communities",
                            "type": "array",
                            "x-eda-nokia-com": {
                              "ui-auto-completes": [
                                {
                                  "condition": "true",
                                  "group": "routingpolicies.eda.nokia.com",
                                  "resource": "communitysets",
                                  "type": "gvr",
                                  "version": "v1alpha1"
                                }
                              ],
                              "ui-column-span": 3
                            }
                          },
                          "replace": {
                            "description": "List of community sets to replace the existing communities with. Cannot be combined with Add or Remove.",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 1,
                            "title": "Replace Communities",
                            "type": "array",
                            "x-eda-nokia-com": {
                              "ui-auto-completes": [
                                {
                                  "condition": "true",
                                  "group": "routingpolicies.eda.nokia.com",
                                  "resource": "communitysets",
                                  "type": "gvr",
                                  "version": "v1alpha1"
                                }
                              ],
                              "ui-column-span": 3
                            }
                          }
                        },
                        "title": "Modify Communities",
                        "type": "object",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 2500,
                          "ui-presence-toggle": true
                        }
                      },
                      "localPreference": {
                        "description": "Set a new LOCAL_PREF value for matching BGP routes.",
                        "format": "int32",
                        "maximum": 4294967295,
                        "minimum": 0,
                        "title": "Set Local Preference",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "LocalPrefOrigin"
                        }
                      },
                      "med": {
                        "description": "Set a new MED value.",
                        "properties": {
                          "numericalValue": {
                            "description": "Fixed numerical value to set or add/subtract.",
                            "maximum": 4294967295,
                            "minimum": 0,
                            "title": "MED Value",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 900,
                              "ui-visible-if": "self.valueType === \"Fixed\""
                            }
                          },
                          "operation": {
                            "description": "The operation to perform on the MED value.",
                            "enum": [
                              "Set",
                              "Add",
                              "Subtract"
                            ],
                            "title": "Operation",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-column-span": 1,
                              "ui-order-priority": 300,
                              "ui-single-line-group": "SetMED"
                            }
                          },
                          "valueType": {
                            "description": "Use a fixed value or an IGP metric to adjust the MED.",
                            "enum": [
                              "Fixed",
                              "IGP"
                            ],
                            "title": "Value Type",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-column-span": 1,
                              "ui-order-priority": 600,
                              "ui-single-line-group": "SetMED"
                            }
                          }
                        },
                        "title": "Set MED",
                        "type": "object",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 2000,
                          "ui-presence-toggle": true
                        }
                      },
                      "setOrigin": {
                        "description": "Set a new ORIGIN attribute for matching BGP routes.",
                        "enum": [
                          "egp",
                          "igp",
                          "incomplete"
                        ],
                        "title": "Set Origin",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "SetOrigin"
                        }
                      }
                    },
                    "title": "BGP",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  },
                  "policyResult": {
                    "description": "Final disposition for the route.",
                    "enum": [
                      "accept",
                      "reject",
                      "NextPolicy",
                      "NextStatement"
                    ],
                    "title": "Policy Result",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  }
                },
                "title": "Default Action",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-category": "Policies",
                  "ui-column-span": 2,
                  "ui-order-priority": 100
                }
              },
              "statement": {
                "description": "List of policy statements.",
                "items": {
                  "properties": {
                    "action": {
                      "description": "Actions for routes that match the policy statement.",
                      "properties": {
                        "bgp": {
                          "description": "Actions related to the BGP protocol.",
                          "properties": {
                            "asPathPrepend": {
                              "description": "AS number to prepend to the AS Path attributes.",
                              "format": "int32",
                              "maximum": 4294967295,
                              "minimum": 1,
                              "title": "AS Path Prepend",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 500,
                                "ui-single-line-group": "ASPrependReplace"
                              }
                            },
                            "asPathRemove": {
                              "description": "Clear the AS path to make it empty.",
                              "title": "AS Path Remove",
                              "type": "boolean",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2
                              }
                            },
                            "asPathReplace": {
                              "description": "Replace the existing AS path with a new AS_SEQUENCE containing the listed AS numbers.",
                              "items": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "title": "AS Path Replace",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 500,
                                "ui-single-line-group": "ASPrependReplace"
                              }
                            },
                            "communitySet": {
                              "description": "Modify BGP communities associated with the route using hybrid Community Sets.",
                              "properties": {
                                "add": {
                                  "description": "List of community sets to add to the route.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 1,
                                  "title": "Add Communities",
                                  "type": "array",
                                  "x-eda-nokia-com": {
                                    "ui-auto-completes": [
                                      {
                                        "condition": "true",
                                        "group": "routingpolicies.eda.nokia.com",
                                        "resource": "communitysets",
                                        "type": "gvr",
                                        "version": "v1alpha1"
                                      }
                                    ],
                                    "ui-column-span": 3
                                  }
                                },
                                "remove": {
                                  "description": "List of community sets to remove from the route.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 1,
                                  "title": "Remove Communities",
                                  "type": "array",
                                  "x-eda-nokia-com": {
                                    "ui-auto-completes": [
                                      {
                                        "condition": "true",
                                        "group": "routingpolicies.eda.nokia.com",
                                        "resource": "communitysets",
                                        "type": "gvr",
                                        "version": "v1alpha1"
                                      }
                                    ],
                                    "ui-column-span": 3
                                  }
                                },
                                "replace": {
                                  "description": "List of community sets to replace the existing communities with. Cannot be combined with Add or Remove.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 1,
                                  "title": "Replace Communities",
                                  "type": "array",
                                  "x-eda-nokia-com": {
                                    "ui-auto-completes": [
                                      {
                                        "condition": "true",
                                        "group": "routingpolicies.eda.nokia.com",
                                        "resource": "communitysets",
                                        "type": "gvr",
                                        "version": "v1alpha1"
                                      }
                                    ],
                                    "ui-column-span": 3
                                  }
                                }
                              },
                              "title": "Modify Communities",
                              "type": "object",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 2500,
                                "ui-presence-toggle": true
                              }
                            },
                            "localPreference": {
                              "description": "Set a new LOCAL_PREF value for matching BGP routes.",
                              "format": "int32",
                              "maximum": 4294967295,
                              "minimum": 0,
                              "title": "Set Local Preference",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400,
                                "ui-single-line-group": "LocalPrefOrigin"
                              }
                            },
                            "med": {
                              "description": "Set a new MED value.",
                              "properties": {
                                "numericalValue": {
                                  "description": "Fixed numerical value to set or add/subtract.",
                                  "maximum": 4294967295,
                                  "minimum": 0,
                                  "title": "MED Value",
                                  "type": "integer",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 2,
                                    "ui-order-priority": 900,
                                    "ui-visible-if": "self.valueType === \"Fixed\""
                                  }
                                },
                                "operation": {
                                  "description": "The operation to perform on the MED value.",
                                  "enum": [
                                    "Set",
                                    "Add",
                                    "Subtract"
                                  ],
                                  "title": "Operation",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 1,
                                    "ui-order-priority": 300,
                                    "ui-single-line-group": "SetMED"
                                  }
                                },
                                "valueType": {
                                  "description": "Use a fixed value or an IGP metric to adjust the MED.",
                                  "enum": [
                                    "Fixed",
                                    "IGP"
                                  ],
                                  "title": "Value Type",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 1,
                                    "ui-order-priority": 600,
                                    "ui-single-line-group": "SetMED"
                                  }
                                }
                              },
                              "title": "Set MED",
                              "type": "object",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 2000,
                                "ui-presence-toggle": true
                              }
                            },
                            "setOrigin": {
                              "description": "Set a new ORIGIN attribute for matching BGP routes.",
                              "enum": [
                                "egp",
                                "igp",
                                "incomplete"
                              ],
                              "title": "Set Origin",
                              "type": "string",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400,
                                "ui-single-line-group": "SetOrigin"
                              }
                            }
                          },
                          "title": "BGP",
                          "type": "object",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2
                          }
                        },
                        "policyResult": {
                          "description": "Final disposition for the route.",
                          "enum": [
                            "accept",
                            "reject",
                            "NextPolicy",
                            "NextStatement"
                          ],
                          "title": "Policy Result",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2
                          }
                        }
                      },
                      "title": "Action",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 300
                      }
                    },
                    "match": {
                      "description": "Match conditions of the policy statement.",
                      "properties": {
                        "bgp": {
                          "description": "Configuration for BGP-specific policy match criteria.",
                          "properties": {
                            "asPathMatch": {
                              "description": "AS Path match criteria.",
                              "properties": {
                                "asPathExpression": {
                                  "description": "A singular regular expression string to match against AS_PATH objects. Mutually exclusive with the ASPathSet reference.",
                                  "title": "AS Path Expression",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 4,
                                    "ui-order-priority": 200
                                  }
                                },
                                "asPathSet": {
                                  "description": "Reference to an ASPathSet resource. Mutually exclusive with the ASPathExpression.",
                                  "title": "AS Path Set",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-auto-completes": [
                                      {
                                        "condition": "true",
                                        "group": "routingpolicies.eda.nokia.com",
                                        "resource": "aspathsets",
                                        "type": "gvr",
                                        "version": "v1alpha1"
                                      }
                                    ],
                                    "ui-column-span": 2,
                                    "ui-order-priority": 400,
                                    "ui-single-line-group": "ASPathMatch"
                                  }
                                },
                                "matchSetOptions": {
                                  "description": "The matching criteria that applies to the members in the referenced set.",
                                  "enum": [
                                    "Any",
                                    "All",
                                    "Invert"
                                  ],
                                  "title": "Match Set Options",
                                  "type": "string",
                                  "x-eda-nokia-com": {
                                    "ui-column-span": 1,
                                    "ui-order-priority": 800,
                                    "ui-single-line-group": "ASPathMatch"
                                  }
                                }
                              },
                              "title": "AS Path",
                              "type": "object",
                              "x-eda-nokia-com": {
                                "ui-order-priority": 800
                              }
                            },
                            "communitySet": {
                              "description": "Match conditions for BGP communities.",
                              "title": "BGP Community",
                              "type": "string",
                              "x-eda-nokia-com": {
                                "ui-auto-completes": [
                                  {
                                    "condition": "true",
                                    "group": "routingpolicies.eda.nokia.com",
                                    "resource": "communitysets",
                                    "type": "gvr",
                                    "version": "v1alpha1"
                                  }
                                ],
                                "ui-column-span": 2,
                                "ui-order-priority": 300,
                                "ui-single-line-group": "BGP"
                              }
                            },
                            "evpnRouteType": {
                              "description": "Match conditions for EVPN route types.",
                              "items": {
                                "type": "integer"
                              },
                              "title": "EVPN Route Type",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2
                              }
                            }
                          },
                          "title": "BGP",
                          "type": "object",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 200
                          }
                        },
                        "family": {
                          "description": "Address families that the route belongs to.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Family",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300
                          }
                        },
                        "prefixSet": {
                          "description": "Reference to a PrefixSet resource.",
                          "title": "Prefix Set",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-auto-completes": [
                              {
                                "condition": "true",
                                "group": "routingpolicies.eda.nokia.com",
                                "resource": "prefixsets",
                                "type": "gvr",
                                "version": "v1alpha1"
                              }
                            ],
                            "ui-column-span": 2,
                            "ui-order-priority": 400
                          }
                        },
                        "protocol": {
                          "description": "The route protocol type to match.",
                          "enum": [
                            "AGGREGATE",
                            "ARP_ND",
                            "BGP",
                            "BGP_EVPN",
                            "DHCP",
                            "GRIBI",
                            "HOST",
                            "ISIS",
                            "LOCAL",
                            "LINUX",
                            "NDK1",
                            "NDK2",
                            "OSPFV2",
                            "OSPFV3",
                            "STATIC"
                          ],
                          "title": "Protocol",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 100
                          }
                        }
                      },
                      "title": "Match",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 200
                      }
                    },
                    "name": {
                      "description": "Name of the policy statement.",
                      "title": "Name",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 4,
                        "ui-order-priority": 100,
                        "ui-unique-key": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "title": "Statements",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-category": "Policies",
                  "ui-column-span": 4,
                  "ui-may-reorder": true,
                  "ui-order-priority": 100
                }
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "PolicyStatus defines the observed state of Policy.",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PolicyList": {
        "description": "PolicyList is a list of policys",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.Policy_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.Policy_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.Policy_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "routingpolicies.eda.nokia.com",
                  "kind": "Policy",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PrefixSet": {
        "description": "PrefixSet is the Schema for the prefixsets API",
        "properties": {
          "apiVersion": {
            "default": "routingpolicies.eda.nokia.com/v1alpha1",
            "pattern": "^routingpolicies\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to routingpolicies.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "PrefixSet",
            "pattern": "^PrefixSet$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to PrefixSet",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet_metadata"
          },
          "spec": {
            "description": "PrefixSet defines a collection of IP prefixes, which may include specific CIDR blocks or a range of prefixes. This set is typically used for matching routes or implementing routing policies.",
            "properties": {
              "prefix": {
                "description": "List of IPv4 or IPv6 prefixes in CIDR notation.",
                "items": {
                  "properties": {
                    "endRange": {
                      "description": "The end range when using a range to match prefixes.",
                      "maximum": 128,
                      "minimum": 0,
                      "title": "End Range",
                      "type": "integer",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 300,
                        "ui-single-line-group": "EndRange"
                      }
                    },
                    "exact": {
                      "description": "Indicates if it is an exact match. Ignores the StartRange and EndRange if this param is set.",
                      "title": "Exact",
                      "type": "boolean",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2
                      }
                    },
                    "prefix": {
                      "description": "The IPv4 or IPv6 prefix in CIDR notation with mask.",
                      "format": "ip",
                      "title": "Prefix",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "ASPrependReplace"
                      }
                    },
                    "startRange": {
                      "description": "If specifying a range, this is the start of the range.",
                      "maximum": 128,
                      "minimum": 0,
                      "title": "Start Range",
                      "type": "integer",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "StartRange"
                      }
                    }
                  },
                  "required": [
                    "prefix"
                  ],
                  "type": "object"
                },
                "title": "Prefixes",
                "type": "array"
              }
            },
            "required": [
              "prefix"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "PrefixSetStatus defines the observed state of PrefixSet.",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList": {
        "description": "PrefixSetList is a list of prefixsets",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PrefixSet_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PrefixSet_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PrefixSet_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "routingpolicies.eda.nokia.com",
                  "kind": "PrefixSet",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Routing Policies Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/routingpolicies.eda.nokia.com": {
      "get": {
        "description": "list versions available from routingpolicies.eda.nokia.com",
        "operationId": "getVersionRoutingpoliciesEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from routingpolicies.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesRoutingpoliciesEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for routingpolicies.eda.nokia.com v1alpha1",
        "operationId": "uiRoutingpoliciesEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/aspathsets": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1Aspathsets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list aspathsets",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/communitysets": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1Communitysets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list communitysets",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/aspathsets": {
      "delete": {
        "operationId": "deleteAllRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of ASPathSet in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list aspathsets in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a ASPathSet",
        "operationId": "createRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/aspathsets/_deleted": {
      "get": {
        "operationId": "getDeletedRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ASPathSet that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/aspathsets/{name}": {
      "delete": {
        "description": "delete the specified ASPathSet",
        "operationId": "deleteRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the ASPathSet to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified ASPathSet.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "description": "name of the ASPathSet",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a ASPathSet",
        "operationId": "patchRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a ASPathSet",
        "operationId": "replaceRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.ASPathSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/aspathsets/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "description": "name of the ASPathSet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced ASPathSet.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/aspathsets/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRoutingpoliciesEdaNokiaComV1alpha1NamespaceAspathsets",
        "parameters": [
          {
            "description": "name of the ASPathSet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced ASPathSet.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/communitysets": {
      "delete": {
        "operationId": "deleteAllRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of CommunitySet in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list communitysets in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a CommunitySet",
        "operationId": "createRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/communitysets/_deleted": {
      "get": {
        "operationId": "getDeletedRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of CommunitySet that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/communitysets/{name}": {
      "delete": {
        "description": "delete the specified CommunitySet",
        "operationId": "deleteRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the CommunitySet to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified CommunitySet.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "description": "name of the CommunitySet",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a CommunitySet",
        "operationId": "patchRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a CommunitySet",
        "operationId": "replaceRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.CommunitySet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/communitysets/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "description": "name of the CommunitySet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced CommunitySet.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/communitysets/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRoutingpoliciesEdaNokiaComV1alpha1NamespaceCommunitysets",
        "parameters": [
          {
            "description": "name of the CommunitySet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced CommunitySet.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys": {
      "delete": {
        "operationId": "deleteAllRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PolicyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Policy in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PolicyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list policys in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Policy",
        "operationId": "createRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys/_deleted": {
      "get": {
        "operationId": "getDeletedRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Policy that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys/{name}": {
      "delete": {
        "description": "delete the specified Policy",
        "operationId": "deleteRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Policy to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Policy.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "name of the Policy",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Policy",
        "operationId": "patchRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Policy",
        "operationId": "replaceRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "name of the Policy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Policy.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "name of the Policy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Policy.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets": {
      "delete": {
        "operationId": "deleteAllRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of PrefixSet in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list prefixsets in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a PrefixSet",
        "operationId": "createRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets/_deleted": {
      "get": {
        "operationId": "getDeletedRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of PrefixSet that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets/{name}": {
      "delete": {
        "description": "delete the specified PrefixSet",
        "operationId": "deleteRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the PrefixSet to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified PrefixSet.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "name of the PrefixSet",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a PrefixSet",
        "operationId": "patchRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a PrefixSet",
        "operationId": "replaceRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "name of the PrefixSet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced PrefixSet.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "name of the PrefixSet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced PrefixSet.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/policys": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1Policys",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PolicyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list policys",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/prefixsets": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1Prefixsets",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list prefixsets",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}